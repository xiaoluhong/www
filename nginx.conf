user  nginx;
worker_processes  4;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  8192;
}

http {
    server_tokens off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # 一个标识（若在浏览器开发者工具里的链接请求响应标头看到此标识，则说明 PageSpeed 生效）
    #pagespeed XHeaderValue "Powered By PageSpeed";
    # HTML页面链接转小写（SEO 优化，推荐）
    pagespeed LowercaseHtmlNames on;
    # 配置共享内存元数据缓存
    pagespeed CreateSharedMemoryMetadataCache "/var/cache/pagespeed/" 51200;

    # Gzip Settings
    pagespeed FetchWithGzip on;
    gzip on;
    gzip_disable "msie6";
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    gzip_vary on;
    gzip_static on;
    gzip_proxied any;
    gzip_min_length 1;
    gzip_comp_level 8;
    gzip_buffers 16 8k;
    gzip_http_version 1.0;
    gzip_types
      application/xml
      application/atom+xml
      application/rss+xml
      application/xhtml+xml
      application/font-woff
      application/x-font-ttf
      application/javascript
      application/x-javascript
      application/vnd.ms-fontobject
      application/json
      application/pdf
      application/ecmascript
      application/postscript
      application/x-web-app-manifest+json
      text/css
      text/csv
      text/plain
      text/x-component
      text/xml
      text/javascript
      text/x-json
      font/opentype
      font/woff2
      font/x-woff
      font/ttf
      image/x-icon
      image/png
      image/jpeg
      image/webp
      image/apng
      image/*
      image/svg+xml;

    server {
        listen       80;
        server_name  _;
        index index.html index.htm;
        root   /usr/share/nginx/html;

        error_page  404   /404.html;
        error_page   500 502 503 504  /50x.html;
        if ($host != 'www.xtplayer.cn') {
            return 301 https://www.xtplayer.cn$1$request_uri;
        }

        rewrite ^/Kubernetes(/.*)?$     /kubernetes/$1 last;

        rewrite ^/rancher/rancher-custom-cluster-backups(/.*)?$                 /rancher/backup-restore/rancher-custom-cluster-backups/$1 last;
        rewrite ^/rancher/rancher-custom-cluster-restore(/.*)?$                 /rancher/backup-restore/rancher-custom-cluster-restore/$1 last;
        rewrite ^/rancher/rancher-rke-cluster-backups(/.*)?$                    /rancher/backup-restore/rancher-rke-cluster-backups/$1 last;
        rewrite ^/rancher/rancher-rke-cluster-restore(/.*)?$                    /rancher/backup-restore/rancher-rke-cluster-restore/$1 last;
        rewrite ^/rancher/rancher-single-container-backups(/.*)?$               /rancher/backup-restore/rancher-single-container-backups/$1 last;
        rewrite ^/rancher/rancher-single-container-restore(/.*)?$               /rancher/backup-restore/rancher-single-container-restore/$1 last;
        rewrite ^/rancher/restore-rkestate(/.*)?$                               /rancher/backup-restore/restore-rkestate/$1 last;
        rewrite ^/rancher/single-to-ha(/.*)?$                                   /rancher/backup-restore/single-to-ha/$1 last;

        rewrite ^/rancher/ha-self-signed-ssl-ingress(/.*)?$                     /rancher/install/ha-self-signed-ssl-ingress/$1 last;
        rewrite ^/rancher/ha-authority-ssl-ingress(/.*)?$                       /rancher/install/ha-authority-ssl-ingress/$1 last;
        rewrite ^/rancher/rancher-install-offline-images(/.*)?$                 /rancher/install/rancher-install-offline-images/$1 last;
        rewrite ^/rancher/single-node-install-custom-ssl(/.*)?$                 /rancher/install/single-node-install-custom-ssl/$1 last;
        rewrite ^/rancher/single-node-install-custom-ssl-l4(/.*)?$              /rancher/install/single-node-install-custom-ssl-l4/$1 last;
        rewrite ^/rancher/single-node-install-custom-ssl-l7(/.*)?$              /rancher/install/single-node-install-custom-ssl-l7/$1 last;
        rewrite ^/rancher/single-node-install-default-ssl(/.*)?$                /rancher/install/single-node-install-default-ssl/$1 last;
        rewrite ^/rancher/single-node-install-default-ssl-l4(/.*)?$             /rancher/install/single-node-install-default-ssl-l4/$1 last;
        rewrite ^/rancher/single-node-install-authority-ssl(/.*)?$              /rancher/install/single-node-install-authority-ssl/$1 last;
        rewrite ^/rancher/single-node-install-authority-ssl-l4(/.*)?$           /rancher/install/single-node-install-authority-ssl-l4/$1 last;
        rewrite ^/rancher/single-node-install-authority-ssl-l7(/.*)?$           /rancher/install/single-node-install-authority-ssl-l7/$1 last;

        rewrite ^/oschina/blog-sync-to-csdn(/.*)?$           /csdn/blog-sync-to-csdn/$1 last;
        rewrite ^/rancher/rancher-rke-k8s-problem-sets(/.*)?$           /rancher/rancher-problem-sets/$1 last;

        pagespeed false;
        pagespeed EnableCachePurge on;

        pagespeed FileCachePath /var/cache/ngx_pagespeed;
        pagespeed EnableFilters local_storage_cache;

        # 为了优化性能，可以写LRU缓存，nginx使用更少的进程，LRUCacheKbPerProcess 可以适当大点
        pagespeed LRUCacheKbPerProcess 8192;
        pagespeed LRUCacheByteLimit 16384;

        # OptimizeForBandwidth、CoreFilters、PassThrough
        pagespeed RewriteLevel PassThrough;
        # 以下为 CoreFilters 默认开启的
        pagespeed EnableFilters add_head;
        pagespeed EnableFilters convert_meta_tags;
        pagespeed EnableFilters extend_cache;
        #pagespeed EnableFilters combine_javascript;（有问题）
            #pagespeed EnableFilters fallback_rewrite_css_urls;
            #pagespeed EnableFilters flatten_css_imports;
        #pagespeed EnableFilters inline_css;
        #pagespeed EnableFilters inline_import_to_link;
        #pagespeed EnableFilters inline_javascript;
            #pagespeed EnableFilters rewrite_css;
        # 重写图像
        #pagespeed EnableFilters rewrite_images;

        # 删除HTML文件中多余的空格
        pagespeed EnableFilters collapse_whitespace;
        # 删除注释
        pagespeed EnableFilters remove_comments;

        #pagespeed EnableFilters outline_css;
        #pagespeed EnableFilters move_css_above_scripts;
        #pagespeed EnableFilters move_css_to_head;
            #pagespeed EnableFilters combine_css;
            #pagespeed EnableFilters rewrite_style_attributes;
            #pagespeed EnableFilters rewrite_style_attributes_with_url;
        #pagespeed EnableFilters sprite_images;

            #pagespeed UseExperimentalJsMinifier on;
        #pagespeed EnableFilters outline_javascript;
        #pagespeed EnableFilters rewrite_javascript;
        #pagespeed EnableFilters rewrite_javascript_external;
        #pagespeed EnableFilters rewrite_javascript_inline;

        ## 重新压缩图像
        #pagespeed EnableFilters recompress_images;
        ## 调整图像大小
        #pagespeed EnableFilters resize_images;
        ## 延迟加载图像
        #pagespeed EnableFilters lazyload_images;
        ##pagespeed CriticalImagesBeaconEnabled false;
        ## pagespeed EnableFilters inline_preview_images;
        ## 内嵌图片
        #pagespeed EnableFilters inline_images;
        #pagespeed EnableFilters resize_mobile_images;
        ## 删除重复的内联图像
        #pagespeed EnableFilters dedup_inlined_images;

        pagespeed MapOriginDomain "https://www.xtplayer.cn" "http://www.xtplayer.cn";
        pagespeed MapRewriteDomain "https://www.xtplayer.cn" "http://www.xtplayer.cn";
        # 插入Link:</example.css>; rel=preload 标头以允许较早地提取重要资源。
        pagespeed EnableFilters hint_preload_subresources;

        #pagespeed DisableFilters prioritize_critical_css;

        # Ensure requests for pagespeed optimized resources go to the pagespeed handler
        # and no extraneous headers get set.

        add_header X-Content-Type-Options "nosniff" always;
        add_header Cache-Control "public, max-age=31536000, immutable";

        location ~ "\.pagespeed\.([a-z]\.)?[a-z]{2}\.[^.]{10}\.[^.]+" {
          add_header "" "";
        }
        location ~ "^/pagespeed_static/" { }
        location ~ "^/ngx_pagespeed_beacon$" { }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$
        {
        #    expires 365d;
            access_log off;
        }

        location ~ .*\.(js|css|woff|woff2|ttf)?$
        {
        #    expires 365d;
            access_log off;
        }
    }
}
